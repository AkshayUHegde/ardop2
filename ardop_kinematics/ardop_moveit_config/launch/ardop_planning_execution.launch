<launch>

	<include
		file="$(find gazebo_ros)/launch/empty_world.launch" >
		<arg name="verbose" value="true" />
	</include>

	<param 
		name="robot_description" 
		textfile="$(find ardop_description_02)/urdf/ardop_description_02.urdf"/>

	<node
		name="spawn_model"
		pkg="gazebo_ros"
		type="spawn_model"
		respawn="false"
		args="-file $(find ardop_description_02)/urdf/ardop_description_02.urdf -urdf -model ardop_description_02"
		output="screen" />

	<include 
		file="$(find ardop_moveit_config)/launch/ardop_description_02_moveit_controller_manager.launch.xml" />

	<!-- <rosparam command="load" file="$(find ardop_moveit_config)/config/controllers.yaml"/> -->
	<rosparam command="load" file="$(find ardop_moveit_config)/config/joint_names.yaml"/>

	<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
	<include file="$(find ardop_moveit_config)/launch/planning_context.launch">
		<arg name="load_robot_description" value="true"/>
	</include>

	<!-- We do not have a robot connected, so publish fake joint states -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="/use_gui" value="false"/>
		<rosparam param="/source_list">[/move_group/joint_states]</rosparam>
	</node>

	<!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
	<include file="$(find ardop_moveit_config)/launch/move_group.launch">
		<arg name="publish_monitored_planning_scene" value="true"/>
	</include>

	<include file="$(find ardop_moveit_config)/launch/moveit_rviz.launch">
		<arg name="config" value="true"/>
	</include>

</launch>